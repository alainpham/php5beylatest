apiVersion: apps/v1
kind: Deployment
metadata:
  name: php5test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php5test
  template:
    metadata:
      annotations:
        resource.opentelemetry.io/service.name: "php5test"
        profiles.grafana.com/cpu.ebpf.enabled: "true"
      labels:
        app: php5test
    spec:
      containers:
      - name: php5test
        image: alainpham/php5test:latest
        imagePullPolicy: "Always"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APPLICATION_NAME
            value: php5test
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://grafana-k8s-monitoring-alloy-receiver.default.svc.cluster.local:4318
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=php5test,service.namespace=$(POD_NAMESPACE),service.instance.id=$(POD_NAME),service.version=1.0.0"
        ports:
          - containerPort: 8080
          - containerPort: 8081
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 0
          successThreshold: 1
          periodSeconds: 10
          failureThreshold: 40 
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 0
          successThreshold: 1
          periodSeconds: 10
          failureThreshold: 40 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - name: httpbin
        image: kennethreitz/httpbin
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env: []
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
spec:
  selector:
    app: httpbin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgdb
  template:
    metadata:
      labels:
        app: pgdb
    spec:
      containers:
      - name: pgdb
        image: postgres:9
        imagePullPolicy: Always
        env:
          - name: POSTGRES_USER
            value: "user"
          - name: POSTGRES_PASSWORD
            value: "password"
          - name: POSTGRES_DB
            value: "testdb"
        ports:
          - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: pgdb
spec:
  selector:
    app: pgdb
  ports:
    - protocol: TCP
      port: 5433
      targetPort: 5432